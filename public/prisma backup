generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
}

model Post {
  id        String   @default(cuid()) @id
  title     String
  content   String?
  published Boolean  @default(false)
  authorId  String?
  author    User?    @relation(fields: [authorId], references: [id])
}

model User {
  id             String        @default(cuid()) @id
  name           String?
  email          String?       @unique
  createdAt      DateTime      @default(now()) @map(name: "created_at")
  updatedAt      DateTime      @updatedAt @map(name: "updated_at")
  posts          Post[]        // Relasi ke Post
  enrollments    Enrollment[]
  userAnswers    UserAnswer[]  // Relasi ke UserAnswer
  @@map(name: "users")
}

model Course {
  id          String      @default(cuid()) @id
  title       String
  description String?
  topics      Topic[]
  enrollments Enrollment[]
}

model Enrollment {
  id        String   @default(cuid()) @id
  userId    String
  courseId  String
  user      User    @relation(fields: [userId], references: [id])
  course    Course  @relation(fields: [courseId], references: [id])

  @@unique([userId, courseId]) // memastikan setiap pasangan user-course unik
}

model Topic {
  id                String   @default(cuid()) @id
  title             String
  description       String?
  courseId          String
  essayQuestion     String
  answerKey         String
  evaluationCriteria String
  userAnswers       UserAnswer[]
  course            Course     @relation(fields: [courseId], references: [id])
}

model UserAnswer {
  id          String   @default(cuid()) @id
  answer      String
  topicId     String   
  userId      String 
  user        User     @relation(fields: [userId], references: [id])
  topic       Topic    @relation(fields: [topicId], references: [id])
}
